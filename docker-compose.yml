version: "3.9"
services:
  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto@sha256:0e0886befecf2bf77e2e613f926f6ee0b77b93f76e49847471177143a8b3863c
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 8883:8883
  postgres:
    container_name: postgres
    image: postgres@sha256:5a90725b3751c2c7ac311c9384dfc1a8f6e41823e341fb1dceed96a11677303a
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    ports:
      - 5432:5432
  backend:
    container_name: backend
    image: ghcr.io/hyperrtls/hyperrtls-backend:latest@sha256:785449a69a704efcae564f50b17e9a5800b44f2664eab6b5f2d4739df346e473
    depends_on:
      - mosquitto
      - postgres
      - traefik
    labels:
      - "traefik.enable=true"
      # Middlewares
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.middlewares.backend-stripprefix.stripprefix.forceSlash=false"
      # Backend-specific router
      - "traefik.http.routers.backend.rule=((Host(`localhost`) && PathPrefix(`/api`)) || Host(`backend.localhost`))"
      - "traefik.http.routers.backend.entrypoints=web,websecure"
      # - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.routers.backend.middlewares=backend-stripprefix@docker"
      # Services
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"
    environment:
      - DYNSEC_BROKER_URL
      - DYNSEC_BROKER_USERNAME
      - DYNSEC_BROKER_PASSWORD
      - MQTT_BROKER_URL
      - MQTT_BROKER_USERNAME
      - MQTT_BROKER_PASSWORD
      - DATABASE_URL
  dashboard:
    container_name: dashboard
    image: ghcr.io/hyperrtls/hyperrtls-dashboard:latest@sha256:9bf2f7b38e9db5af48246b5353e3186c5be495bb3cc78b9dccea69d5a5156de8
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      # Dashboard-specific router
      - "traefik.http.routers.dashboard.rule=(Host(`localhost`) || Host(`dashboard.localhost`))"
      - "traefik.http.routers.dashboard.entrypoints=web,websecure"
      # - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.service=dashboard"
      # Services
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
      - "traefik.http.services.dashboard.loadbalancer.server.scheme=http"
    environment:
      - SERVER_API_URL
      - CLIENT_API_URL
  traefik:
    container_name: traefik
    image: traefik:v2.10@sha256:a7321e2f1f93bad56585e8065f94c4ca7e6ba915750a3654b25599ac2381121c
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      # - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    ports:
      - 8081:80
      # - 8082:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock